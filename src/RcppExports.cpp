// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Modified_Hans_Gibbs
List Modified_Hans_Gibbs(arma::mat X, arma::vec y, double a1, double b1, double u1, double v1, int nsamples, arma::vec beta_init, double lambda_init, double sigma2_init, int verbose);
RcppExport SEXP _BayesianLasso_Modified_Hans_Gibbs(SEXP XSEXP, SEXP ySEXP, SEXP a1SEXP, SEXP b1SEXP, SEXP u1SEXP, SEXP v1SEXP, SEXP nsamplesSEXP, SEXP beta_initSEXP, SEXP lambda_initSEXP, SEXP sigma2_initSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type a1(a1SEXP);
    Rcpp::traits::input_parameter< double >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< double >::type u1(u1SEXP);
    Rcpp::traits::input_parameter< double >::type v1(v1SEXP);
    Rcpp::traits::input_parameter< int >::type nsamples(nsamplesSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_init(beta_initSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_init(lambda_initSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2_init(sigma2_initSEXP);
    Rcpp::traits::input_parameter< int >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(Modified_Hans_Gibbs(X, y, a1, b1, u1, v1, nsamples, beta_init, lambda_init, sigma2_init, verbose));
    return rcpp_result_gen;
END_RCPP
}
// Modified_PC_Gibbs
List Modified_PC_Gibbs(arma::mat X, arma::vec y, double a1, double b1, double u1, double v1, int nsamples, double lambda_init, double sigma2_init, int verbose);
RcppExport SEXP _BayesianLasso_Modified_PC_Gibbs(SEXP XSEXP, SEXP ySEXP, SEXP a1SEXP, SEXP b1SEXP, SEXP u1SEXP, SEXP v1SEXP, SEXP nsamplesSEXP, SEXP lambda_initSEXP, SEXP sigma2_initSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type a1(a1SEXP);
    Rcpp::traits::input_parameter< double >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< double >::type u1(u1SEXP);
    Rcpp::traits::input_parameter< double >::type v1(v1SEXP);
    Rcpp::traits::input_parameter< int >::type nsamples(nsamplesSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_init(lambda_initSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2_init(sigma2_initSEXP);
    Rcpp::traits::input_parameter< int >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(Modified_PC_Gibbs(X, y, a1, b1, u1, v1, nsamples, lambda_init, sigma2_init, verbose));
    return rcpp_result_gen;
END_RCPP
}
// MillsRatio
double MillsRatio(double d);
RcppExport SEXP _BayesianLasso_MillsRatio(SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(MillsRatio(d));
    return rcpp_result_gen;
END_RCPP
}
// zlasso
double zlasso(double a, double b, double c, bool logarithm);
RcppExport SEXP _BayesianLasso_zlasso(SEXP aSEXP, SEXP bSEXP, SEXP cSEXP, SEXP logarithmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< bool >::type logarithm(logarithmSEXP);
    rcpp_result_gen = Rcpp::wrap(zlasso(a, b, c, logarithm));
    return rcpp_result_gen;
END_RCPP
}
// dlasso
arma::vec dlasso(arma::vec x, double a, double b, double c, bool logarithm);
RcppExport SEXP _BayesianLasso_dlasso(SEXP xSEXP, SEXP aSEXP, SEXP bSEXP, SEXP cSEXP, SEXP logarithmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< bool >::type logarithm(logarithmSEXP);
    rcpp_result_gen = Rcpp::wrap(dlasso(x, a, b, c, logarithm));
    return rcpp_result_gen;
END_RCPP
}
// plasso
arma::vec plasso(arma::vec q, double a, double b, double c);
RcppExport SEXP _BayesianLasso_plasso(SEXP qSEXP, SEXP aSEXP, SEXP bSEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type q(qSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(plasso(q, a, b, c));
    return rcpp_result_gen;
END_RCPP
}
// qlasso
arma::vec qlasso(arma::vec p, double a, double b, double c);
RcppExport SEXP _BayesianLasso_qlasso(SEXP pSEXP, SEXP aSEXP, SEXP bSEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(qlasso(p, a, b, c));
    return rcpp_result_gen;
END_RCPP
}
// rlasso
arma::vec rlasso(double n, double a, double b, double c);
RcppExport SEXP _BayesianLasso_rlasso(SEXP nSEXP, SEXP aSEXP, SEXP bSEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(rlasso(n, a, b, c));
    return rcpp_result_gen;
END_RCPP
}
// elasso
double elasso(double a, double b, double c);
RcppExport SEXP _BayesianLasso_elasso(SEXP aSEXP, SEXP bSEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(elasso(a, b, c));
    return rcpp_result_gen;
END_RCPP
}
// vlasso
double vlasso(double a, double b, double c);
RcppExport SEXP _BayesianLasso_vlasso(SEXP aSEXP, SEXP bSEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(vlasso(a, b, c));
    return rcpp_result_gen;
END_RCPP
}
// mlasso
arma::vec mlasso(arma::vec a, arma::vec b, arma::vec c);
RcppExport SEXP _BayesianLasso_mlasso(SEXP aSEXP, SEXP bSEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type a(aSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(mlasso(a, b, c));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BayesianLasso_Modified_Hans_Gibbs", (DL_FUNC) &_BayesianLasso_Modified_Hans_Gibbs, 11},
    {"_BayesianLasso_Modified_PC_Gibbs", (DL_FUNC) &_BayesianLasso_Modified_PC_Gibbs, 10},
    {"_BayesianLasso_MillsRatio", (DL_FUNC) &_BayesianLasso_MillsRatio, 1},
    {"_BayesianLasso_zlasso", (DL_FUNC) &_BayesianLasso_zlasso, 4},
    {"_BayesianLasso_dlasso", (DL_FUNC) &_BayesianLasso_dlasso, 5},
    {"_BayesianLasso_plasso", (DL_FUNC) &_BayesianLasso_plasso, 4},
    {"_BayesianLasso_qlasso", (DL_FUNC) &_BayesianLasso_qlasso, 4},
    {"_BayesianLasso_rlasso", (DL_FUNC) &_BayesianLasso_rlasso, 4},
    {"_BayesianLasso_elasso", (DL_FUNC) &_BayesianLasso_elasso, 3},
    {"_BayesianLasso_vlasso", (DL_FUNC) &_BayesianLasso_vlasso, 3},
    {"_BayesianLasso_mlasso", (DL_FUNC) &_BayesianLasso_mlasso, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_BayesianLasso(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
